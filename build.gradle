plugins {
    id "com.palantir.git-version" version "3.0.0"
    id "org.sonarqube" version "4.4.1.3373"
    id "opendcs-rest-api.java-conventions"
    id "opendcs-rest-api.deps-conventions"
    id "opendcs-rest-api.publishing-conventions"
}

def static versionLabel(gitInfo) {
    def branch = gitInfo.branchName // all branches are snapshots, only tags get released
    def tag = gitInfo.lastTag
    // tag is returned as is. Branch may need cleanup
    return branch == null ? tag : 99 + "." + branch.replace("/", "-") + "-SNAPSHOT"
}

group = 'org.opendcs'
version = versionLabel(versionDetails())

dependencies {
    api(libs.opendcs) {
        //Workaround for the excessive opendcs dependencies
        exclude group: '*', module: '*'
    }
    implementation(libs.jetty.server)
    implementation(libs.jetty.servlets)
    implementation(libs.jetty.servlet)
    implementation(libs.servlet.api)
    implementation(libs.slf4j.api)
    implementation(libs.jersey.client)
    implementation(libs.jersey.server)
    implementation(libs.json.jackson)
    implementation(libs.jersey.common)
    implementation(libs.jersey.container.servlet)
    implementation(libs.jersey.hk2)
    implementation(libs.postgresql)
    implementation(libs.swagger.jaxrs2)
    implementation(libs.swagger.ui)
    implementation(libs.jaxb.runtime)

}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = "odcsapi"
            from components.java
        }
    }
}

task startJetty(type: JavaExec) { ->
    classpath = sourceSets.test.runtimeClasspath
    mainClass = "org.opendcs.odcsapi.start.Start"
    jvmArgs("-DDCSTOOL_HOME=" + (project.findProperty("DCSTOOL_HOME") ?: "${project.buildDir}/opendcs/OPENDCS"),
            "-DDCSTOOL_USERDIR=" + (project.findProperty("DCSTOOL_USERDIR") ?: "${project.buildDir}/OPENDCS"))
    args(
            "-p", project.findProperty("REST_API_PORT") ?: "8081",
            "-c", project.findProperty("REST_API_CONTEXT") ?: "odcsapi",
            "-cors", project.findProperty("REST_API_CORS") ?: "${project.buildDir}/OPENDCS/opendcs_web_cors.cfg",
            "-s")
}