import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id "opendcs-rest-api.java-conventions"
    id "opendcs-rest-api.deps-conventions"
    id "opendcs-rest-api.publishing-conventions"
}

dependencies {
    implementation(project(":odcsapi"))
    implementation(libs.jetty.server)
    implementation(libs.jetty.servlets)
    implementation(libs.jetty.servlet)
    implementation(libs.jersey.container.servlet)
    implementation(libs.postgresql)
    implementation(libs.swagger.jaxrs2)
}

jar {
    manifest {
        attributes(
                'Main-Class': 'org.opendcs.odcsapi.jetty.Start',
                'Class-Path': configurations.runtimeClasspath.files.collect { it.getName() }.join(' ')
        )
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId = jar.archiveBaseName.get()
            from components.java
        }
    }
}

task startJetty(type: JavaExec) { ->
    classpath = sourceSets.test.runtimeClasspath
    mainClass = "org.opendcs.odcsapi.jetty.Start"
    jvmArgs("-DDCSTOOL_HOME=" + (project.findProperty("DCSTOOL_HOME") ?: "${project.buildDir}/opendcs/OPENDCS"),
            "-DDCSTOOL_USERDIR=" + (project.findProperty("DCSTOOL_USERDIR") ?: "${project.buildDir}/OPENDCS"))
    args(
            "-p", project.findProperty("REST_API_PORT") ?: "8081",
            "-c", project.findProperty("REST_API_CONTEXT") ?: "odcsapi",
            "-cors", project.findProperty("REST_API_CORS") ?: "${project.buildDir}/OPENDCS/opendcs_web_cors.cfg",
            "-s")
}

task prepareStartScript(type: Copy) {
    from './bin/start.sh'
    into "${buildDir}/odcsapi-jetty-standalone/bin/"
    filter(ReplaceTokens, tokens: ['jarName': jar.archiveFileName.get()])
}

task bundle(type: Tar) {
    dependsOn jar
    dependsOn prepareStartScript
    archiveExtension = 'tar.gz'

    into('libs') {
        from configurations.runtimeClasspath
    }
    into('libs') {
        from jar
    }
    into('bin') {
        from "${buildDir}/odcsapi-jetty-standalone/bin/start.sh"
    }
}
